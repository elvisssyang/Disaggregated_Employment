library(bookdown)
file.remove(list.files(pattern = "*.(log|mtc|maf|aux|bbl|blg|xml)"))
file.remove(list.files(pattern = "*.(log|mtc|maf|aux|bbl|blg|xml)"))
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[ pre-covid dataset (1984 Q4 to 2020 Q1)]
B-->C[spilit into training set (120 observations) and test set (21) observation]
C-->D[M = A pool of forecasting methods.]
D-->E(Apply the method F to bottom level, cluster in different groups by their common features.)
E-->F(Forecasting methods in M is selected for each group in x by minimising the foreacast errors)
F-->K(Reconcile all the forecasts to make sure they are coherent)
K-->H[Conduct further analysis]
H-->I[END]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[ pre-covid dataset 1984 Q4 to 2020 Q1]
B-->C[spilit into training set (120 observations) and test set (21) observation]
C-->D[M = A pool of forecasting methods.]
D-->E(Apply the method F to bottom level, cluster in different groups by their common features.)
E-->F(Forecasting methods in M is selected for each group in x by minimising the foreacast errors)
F-->K(Reconcile all the forecasts to make sure they are coherent)
K-->H[Conduct further analysis]
H-->I[END]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[ pre-covid dataset 1984 Q4 to 2020 Q1]
B-->C[spilit into training set 120 observations and test set 21 observation]
C-->D[M = A pool of forecasting methods.]
D-->E(Apply the method F to bottom level, cluster in different groups by their common features.)
E-->F(Forecasting methods in M is selected for each group in x by minimising the foreacast errors)
F-->K(Reconcile all the forecasts to make sure they are coherent)
K-->H[Conduct further analysis]
H-->I[END]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[ pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Training set 120 observations]
B-->D[Test set 21 observation]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[]
C-->D[Training set 120 observations]
C-->E[Test set 21 observation]
D-->F[Estimate model based on ]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[sss]
C-->D[Training set 120 observations]
C-->E[Test set 21 observation]
D-->F[Estimate model based on ]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing possible lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Training set 120 observations]
C-->E[Test set 21 observation]
D-->F[Estimate model based on ]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on ]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one \lambda each time]
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one \lambda each time]
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one $\lambda$ each time]
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on ]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[sadfad]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->[sadfad]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->G[sadfad]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[sadfad]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[Subtract the test observations]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[Subtract the test set 21 observations]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations;Test set 21 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[Subtract the test set 21 observations]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations, Test set 21 observations]
D-->F[Test set 21 observation]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[Subtract the test set 21 observations]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations, Test set 21 observations]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[Subtract the test set 21 observations]
", height = 300)
DiagrammeR::mermaid("
graph TB
A[BEGIN]-->B[Pre-covid dataset 1984-Q4 to 2020-Q1]
B-->C[Set up a list containing training lambda values -- init = 0.0001, step = 0.0001 and stop = 0.1]
C-->D[Pick one lambda from the list each time]
D-->E[Training set 120 observations, Test set 21 observations]
E-->G[Estimate model based on the lambda ]
G-->H[Draw estimated forecasts]
H-->F[Subtract the test set 21 observations to calculate errors]
", height = 300)
library(viridis)
install.packages("viridis")
citation("R")
citation()
citation()
citation("bookdown")
print( Yihui Xie (2022). bookdown: Authoring
print(citation("bookdown"), bibtex = T)
packageVersion("bookdown")
citation("monash")
-0.0004619 + 0.00271218 +0.00066987
citation("tidyverse")
86x85
86*85
85*85
86*84
citation("bookdown")
